
package mw.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "service", targetNamespace = "http://service.mw/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Service {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hasexportnumber", targetNamespace = "http://service.mw/", className = "mw.client.Hasexportnumber")
    @ResponseWrapper(localName = "hasexportnumberResponse", targetNamespace = "http://service.mw/", className = "mw.client.HasexportnumberResponse")
    public String hasexportnumber(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reservation", targetNamespace = "http://service.mw/", className = "mw.client.Reservation")
    @ResponseWrapper(localName = "reservationResponse", targetNamespace = "http://service.mw/", className = "mw.client.ReservationResponse")
    public String reservation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "subexpertnum", targetNamespace = "http://service.mw/", className = "mw.client.Subexpertnum")
    @ResponseWrapper(localName = "subexpertnumResponse", targetNamespace = "http://service.mw/", className = "mw.client.SubexpertnumResponse")
    public String subexpertnum(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addexpertnum", targetNamespace = "http://service.mw/", className = "mw.client.Addexpertnum")
    @ResponseWrapper(localName = "addexpertnumResponse", targetNamespace = "http://service.mw/", className = "mw.client.AddexpertnumResponse")
    public String addexpertnum(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancel", targetNamespace = "http://service.mw/", className = "mw.client.Cancel")
    @ResponseWrapper(localName = "cancelResponse", targetNamespace = "http://service.mw/", className = "mw.client.CancelResponse")
    public String cancel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
